<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.mybatis.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="me.mybatis.po.Student">
    <result column="SNO" property="sno" jdbcType="VARCHAR"/>
    <result column="SAGE" property="sage" jdbcType="VARCHAR"/>
    <result column="SSEX" jdbcType="VARCHAR" property="ssex" />
    <result column="SNAME" jdbcType="VARCHAR" property="sname" />
    <collection property="scores" column="SNO" select="me.mybatis.mapper.StudentMapper.selectBySno"></collection>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List">
    SNO, SNAME, SAGE, SSEX
  </sql>

  <select id="selectBySno" resultMap="BaseResultMap" parameterType="String">
    SELECT *
    FROM STUDENT
    WHERE SNO=#{sno}
  </select>

  <select id="selectByExample" parameterType="me.mybatis.po.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from STUDENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <delete id="deleteByExample" parameterType="me.mybatis.po.StudentExample">
    delete from STUDENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <delete id="deleteAny" parameterType="int[]">
      DELETE FROM STUDENT stu
      <where>
        stu.SNO IN
        <foreach collection="array" item="item" index="index" open="(" close=")" separator=",">
          #{item}
        </foreach>
      </where>
  </delete>

  <insert id="insert" parameterType="me.mybatis.po.Student">
    insert into STUDENT (SNO, SNAME, SAGE, 
      SSEX)
    values (#{sno,jdbcType=VARCHAR}, #{sname,j
    dbcType=VARCHAR}, #{sage,jdbcType=VARCHAR},
      #{ssex,jdbcType=VARCHAR})
  </insert>

  <insert id="insertStudent" parameterType="me.mybatis.po.Student" >
      <selectKey keyProperty="sno" order="BEFORE" resultType="String">
          SELECT STUDENT_SEQ.nextval FROM dual
      </selectKey>
      INSERT INTO STUDENT
      <trim prefix="(" suffix=")" suffixOverrides=",">
        SNO,SNAME, SAGE, SSEX
      </trim>
      <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
        #{sno,jdbcType=VARCHAR},
        #{sname,jdbcType=VARCHAR},
        #{sage,jdbcType=VARCHAR},
        #{ssex,jdbcType=VARCHAR}
      </trim>
  </insert>

  <insert id="insertManyStudent" parameterType="java.util.List" >
      INSERT INTO STUDENT
      <trim prefix="(" suffix=")" suffixOverrides=",">
          <include refid="Base_Column_List"/>
      </trim>
      SELECT STUDENT_SEQ.NEXTVAL,stu.* FROM (
          <foreach collection="list" item="item" separator="UNION ALL">
            SELECT
            #{item.sname,jdbcType=VARCHAR},
            #{item.sage,jdbcType=VARCHAR},#{item.ssex,jdbcType=VARCHAR}
            FROM dual
          </foreach>
      ) stu
  </insert>

  <insert id="insertSelective" parameterType="me.mybatis.po.Student">
    insert into STUDENT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sno != null">
      SNO,
    </if>
      <if test="sname != null">
        SNAME,
      </if>
      <if test="sage != null">
        SAGE,
      </if>
      <if test="ssex != null">
        SSEX,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        #{sno,jdbcType=VARCHAR},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="sage != null">
        #{sage,jdbcType=VARCHAR},
      </if>
      <if test="ssex != null">
        #{ssex,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="me.mybatis.po.StudentExample" resultType="java.lang.Integer">
    select count(*) from STUDENT
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update STUDENT
    <set>
      <if test="record.sno != null">
        SNO = #{record.sno,jdbcType=VARCHAR},
      </if>
      <if test="record.sname != null">
        SNAME = #{record.sname,jdbcType=VARCHAR},
      </if>
      <if test="record.sage != null">
        SAGE = #{record.sage,jdbcType=VARCHAR},
      </if>
      <if test="record.ssex != null">
        SSEX = #{record.ssex,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update STUDENT
    set SNO = #{record.sno,jdbcType=VARCHAR},
        SNAME = #{record.sname,jdbcType=VARCHAR},
        SAGE = #{record.sage,jdbcType=VARCHAR},
        SSEX = #{record.ssex,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>